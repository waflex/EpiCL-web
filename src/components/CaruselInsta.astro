---
// CaruselInsta.astro - Instagram Carousel for Community Artists
// Props definition with API integration
const { 
  title = "Artistas de la Comunidad",
  subtitle = "Conoce el talento de nuestros miembros",
  instagramUsernames = ["artist_1", "artist_2", "artist_3"], // Instagram usernames to fetch
  useStaticData = true, // Fallback to static data if API fails
  staticAccounts = [
    {
      username: "artist_1",
      displayName: "Artist One",
      avatar: "/Img/artists/artist1.webp",
      bio: "Ilustrador y animador digital",
      followers: "1.2K",
      posts: [
        { 
          image: "/Img/artists/artist1_post1.webp", 
          likes: 120, 
          comments: 15,
          caption: "Mi último trabajo para Epic: The Musical"
        },
        { 
          image: "/Img/artists/artist1_post2.webp", 
          likes: 85, 
          comments: 8,
          caption: "Bocetos de personajes"
        },
        { 
          image: "/Img/artists/artist1_post3.webp", 
          likes: 210, 
          comments: 32,
          caption: "Fan art de la escena final"
        }
      ]
    },
    {
      username: "artist_2",
      displayName: "Artist Two",
      avatar: "/Img/artists/artist2.webp",
      bio: "Cosplayer y diseñador de vestuario",
      followers: "3.5K",
      posts: [
        { 
          image: "/Img/artists/artist2_post1.webp", 
          likes: 320, 
          comments: 45,
          caption: "Mi cosplay de Hermes"
        },
        { 
          image: "/Img/artists/artist2_post2.webp", 
          likes: 275, 
          comments: 38,
          caption: "Proceso de creación de props"
        },
        { 
          image: "/Img/artists/artist2_post3.webp", 
          likes: 410, 
          comments: 62,
          caption: "Sesión fotográfica con el equipo"
        }
      ]
    },
    {
      username: "artist_3",
      displayName: "Artist Three",
      avatar: "/Img/artists/artist3.webp",
      bio: "Músico y compositor",
      followers: "2.8K",
      posts: [
        { 
          image: "/Img/artists/artist3_post1.webp", 
          likes: 180, 
          comments: 25,
          caption: "Cover de la canción principal"
        },
        { 
          image: "/Img/artists/artist3_post2.webp", 
          likes: 145, 
          comments: 18,
          caption: "Ensayo con la banda"
        },
        { 
          image: "/Img/artists/artist3_post3.webp", 
          likes: 230, 
          comments: 42,
          caption: "Nueva composición inspirada en Epic"
        }
      ]
    }
  ]
} = Astro.props;

// This would be replaced with actual API fetching in a production environment
// For now, we'll use the static data
let accounts = [];

if (useStaticData) {
  accounts = staticAccounts;
} else {
  // In a real implementation, you would fetch from Instagram API here
  // Example of how this might look:
  /*
  try {
    // For each username, fetch their profile and recent posts
    for (const username of instagramUsernames) {
      const profileData = await fetch(`https://graph.instagram.com/me?fields=id,username,media_count,account_type&access_token=${accessToken}`);
      const profile = await profileData.json();
      
      const mediaData = await fetch(`https://graph.instagram.com/me/media?fields=id,caption,media_type,media_url,permalink,thumbnail_url,timestamp,username&access_token=${accessToken}`);
      const media = await mediaData.json();
      
      // Transform the data to match our component's expected format
      accounts.push({
        username: profile.username,
        displayName: profile.username, // Instagram API doesn't provide display name
        avatar: "https://via.placeholder.com/150?text=Artist", // API doesn't directly provide profile pic
        bio: "Artist on Instagram",
        followers: "N/A", // Basic API doesn't provide follower count
        posts: media.data.slice(0, 3).map(post => ({
          image: post.media_url,
          likes: "N/A", // Basic API doesn't provide like counts
          comments: "N/A", // Basic API doesn't provide comment counts
          caption: post.caption || "No caption"
        }))
      });
    }
  } catch (error) {
    console.error("Error fetching Instagram data:", error);
    accounts = staticAccounts; // Fallback to static data
  }
  */
}
---

<div class="w-full py-8 bg-gray-50">
  <div class="container mx-auto px-4">
    <div class="text-center mb-8">
      <h2 class="text-3xl font-bold text-gray-800">{title}</h2>
      <p class="text-gray-600 mt-2">{subtitle}</p>
    </div>
    
    <div class="instagram-carousel relative">
      <!-- Carousel Navigation -->
      <div class="absolute top-1/2 -translate-y-1/2 left-2 z-10">
        <button id="prevAccount" class="bg-white p-2 rounded-full shadow-md hover:bg-gray-100 transition-colors">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
          </svg>
        </button>
      </div>
      
      <div class="absolute top-1/2 -translate-y-1/2 right-2 z-10">
        <button id="nextAccount" class="bg-white p-2 rounded-full shadow-md hover:bg-gray-100 transition-colors">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-gray-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        </button>
      </div>
      
      <!-- Instagram Profiles -->
      <div class="carousel-container overflow-hidden">
        <div id="accountsSlider" class="flex transition-transform duration-500 ease-in-out">
          {accounts.map((account, index) => (
            <div class="instagram-profile min-w-full px-4" data-index={index}>
              <div class="bg-white rounded-lg shadow-md overflow-hidden max-w-4xl mx-auto">
                <!-- Profile Header -->
                <div class="p-4 border-b flex items-center">
                  <div class="w-12 h-12 rounded-full overflow-hidden mr-3">
                    <img 
                      src={account.avatar} 
                      alt={account.displayName}
                      class="w-full h-full object-cover"
                      onerror="this.src='https://via.placeholder.com/150?text=Artist'; this.onerror=null;"
                    />
                  </div>
                  <div class="flex-1">
                    <div class="flex items-center justify-between">
                      <h3 class="font-semibold text-gray-900">{account.displayName}</h3>
                      <div class="text-sm text-blue-500">Seguir</div>
                    </div>
                    <div class="text-sm text-gray-500">@{account.username}</div>
                  </div>
                </div>
                
                <!-- Profile Info -->
                <div class="p-4 border-b">
                  <p class="text-gray-700 text-sm">{account.bio}</p>
                  <div class="flex mt-3 text-sm">
                    <div class="mr-4">
                      <span class="font-semibold">{account.posts.length}</span> publicaciones
                    </div>
                    <div>
                      <span class="font-semibold">{account.followers}</span> seguidores
                    </div>
                  </div>
                </div>
                
                <!-- Posts Grid -->
                <div class="grid grid-cols-3 gap-1">
                  {account.posts.map((post, postIndex) => (
                    <div class="instagram-post relative group">
                      <img 
                        src={post.image} 
                        alt={`Post ${postIndex + 1} by ${account.displayName}`}
                        class="w-full aspect-square object-cover"
                        onerror="this.src='https://via.placeholder.com/300?text=Post'; this.onerror=null;"
                      />
                      <div class="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity">
                        <div class="text-white flex items-center mr-3">
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd" />
                          </svg>
                          <span>{post.likes}</span>
                        </div>
                        <div class="text-white flex items-center">
                          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-1" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M18 10c0 3.866-3.582 7-8 7a8.841 8.841 0 01-4.083-.98L2 17l1.338-3.123C2.493 12.767 2 11.434 2 10c0-3.866 3.582-7 8-7s8 3.134 8 7zM7 9H5v2h2V9zm8 0h-2v2h2V9zM9 9h2v2H9V9z" clip-rule="evenodd" />
                          </svg>
                          <span>{post.comments}</span>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
                
                <!-- Featured Post -->
                <div class="p-4 border-t">
                  <div class="flex items-start">
                    <div class="w-8 h-8 rounded-full overflow-hidden mr-3">
                      <img 
                        src={account.avatar} 
                        alt={account.displayName}
                        class="w-full h-full object-cover"
                        onerror="this.src='https://via.placeholder.com/150?text=Artist'; this.onerror=null;"
                      />
                    </div>
                    <div>
                      <p class="text-sm">
                        <span class="font-semibold">{account.username}</span> 
                        {account.posts[0].caption}
                      </p>
                      <p class="text-xs text-gray-500 mt-1">Ver los {account.posts[0].comments} comentarios</p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
      
      <!-- Carousel Indicators -->
      <div class="flex justify-center mt-4">
        {accounts.map((_, index) => (
          <button 
            class="carousel-indicator w-3 h-3 rounded-full mx-1 bg-gray-300 hover:bg-gray-400 transition-colors" 
            data-index={index}
            aria-label={`Ver perfil de artista ${index + 1}`}
          ></button>
        ))}
      </div>
    </div>
    
    <div class="text-center mt-8">
      <a href="#" class="inline-block bg-gradient-to-r from-purple-500 to-pink-500 text-white font-bold py-2 px-6 rounded-full hover:from-purple-600 hover:to-pink-600 transition-colors">
        Ver más artistas en Instagram
      </a>
    </div>
  </div>
</div>

<script>
  // Carousel functionality
  document.addEventListener('DOMContentLoaded', () => {
    const slider = document.getElementById('accountsSlider');
    const prevBtn = document.getElementById('prevAccount');
    const nextBtn = document.getElementById('nextAccount');
    const indicators = document.querySelectorAll('.carousel-indicator');
    const profiles = document.querySelectorAll('.instagram-profile');
    
    let currentIndex = 0;
    const totalProfiles = profiles.length;
    
    // Update active indicator
    const updateIndicators = (index) => {
      indicators.forEach((indicator, i) => {
        if (i === index) {
          indicator.classList.remove('bg-gray-300');
          indicator.classList.add('bg-gray-700');
        } else {
          indicator.classList.remove('bg-gray-700');
          indicator.classList.add('bg-gray-300');
        }
      });
    };
    
    // Move to specific slide
    const goToSlide = (index) => {
      currentIndex = index;
      if (slider) {
        slider.style.transform = `translateX(-${currentIndex * 100}%)`;
      }
      updateIndicators(currentIndex);
    };
    
    // Initialize first indicator as active
    updateIndicators(0);
    
    // Previous button click
    if (prevBtn) {
      prevBtn.addEventListener('click', () => {
        currentIndex = (currentIndex - 1 + totalProfiles) % totalProfiles;
        goToSlide(currentIndex);
      });
    }
    
    // Next button click
    if (nextBtn) {
      nextBtn.addEventListener('click', () => {
        currentIndex = (currentIndex + 1) % totalProfiles;
        goToSlide(currentIndex);
      });
    }
    
    // Indicator clicks
    indicators.forEach((indicator, index) => {
      indicator.addEventListener('click', () => {
        goToSlide(index);
      });
    });
    
    // Auto-advance carousel every 5 seconds
    setInterval(() => {
      currentIndex = (currentIndex + 1) % totalProfiles;
      goToSlide(currentIndex);
    }, 5000);
  });
</script>

<style>
  .instagram-post {
    position: relative;
    overflow: hidden;
  }
  
  .instagram-post img {
    transition: transform 0.3s ease;
  }
  
  .instagram-post:hover img {
    transform: scale(1.05);
  }
  
  .carousel-indicator.active {
    background-color: #4B5563;
  }
</style>